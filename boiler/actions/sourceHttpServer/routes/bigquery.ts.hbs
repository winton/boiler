import http from "http"
import { parse } from "url"

import { BigQueryBuffer } from "bigquery-buffer"
import pino from "pino"

// âœ‹ Configure route
const ROUTE = "/bq"

export class BigQueryRoute {
  constructor(
    private log?: pino.Logger,
    private buffer?: BigQueryBuffer
  ) {}

  match(req: http.IncomingMessage): boolean {
    return req.url.startsWith(ROUTE)
  }

  async route(
    req: http.IncomingMessage,
    res: http.ServerResponse
  ): Promise<number | void> {
    const { query } = parse(req.url, true)

    if (this.buffer) {
      await this.buffer.push(query)
    } else {
      this.log.info(query)
    }

    res.setHeader(
      "Cache-Control",
      "private, no-cache, no-store"
    )

    res.setHeader("Content-Length", 0)

    if (req.url.includes(".gif?")) {
      res.setHeader("Content-Type", "image/gif")
    }

    res.statusCode = 204
  }
}

